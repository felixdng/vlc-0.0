/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Tue Mar 20 14:40:16 2018. */

#ifndef PB_CONNECT_PB_H_INCLUDED
#define PB_CONNECT_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _ConnectReq {
    char serial_num[200];
/* @@protoc_insertion_point(struct:ConnectReq) */
} ConnectReq;

typedef struct _ConnectResp {
    int64_t state;
    char serial_num[200];
    int64_t connect_state;
    int64_t version_code;
/* @@protoc_insertion_point(struct:ConnectResp) */
} ConnectResp;

/* Default values for struct fields */

/* Initializer values for message structs */
#define ConnectReq_init_default                  {""}
#define ConnectResp_init_default                 {0, "", 0, 0}
#define ConnectReq_init_zero                     {""}
#define ConnectResp_init_zero                    {0, "", 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define ConnectReq_serial_num_tag                1
#define ConnectResp_state_tag                    1
#define ConnectResp_serial_num_tag               2
#define ConnectResp_connect_state_tag            3
#define ConnectResp_version_code_tag             4

/* Struct field encoding specification for nanopb */
extern const pb_field_t ConnectReq_fields[2];
extern const pb_field_t ConnectResp_fields[5];

/* Maximum encoded size of messages (where known) */
#define ConnectReq_size                          203
#define ConnectResp_size                         236

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define CONNECT_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
